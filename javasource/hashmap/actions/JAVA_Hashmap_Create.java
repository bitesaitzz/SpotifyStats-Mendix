// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package hashmap.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import hashmap.implementation.MxHashMapHelper;
import hashmap.proxies.AbstractMxHashMapEntry;
import hashmap.proxies.MxHashMap;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * Creates a hashmap with type key=string, value = given entity type. Entity type should be a specialization of Hashmap.AbstractMxHashMapEntry otherwise a runtime error will be thrown
 */
public class JAVA_Hashmap_Create extends UserAction<IMendixObject>
{
	private final java.lang.String EntityType;

	public JAVA_Hashmap_Create(
		IContext context,
		java.lang.String _entityType
	)
	{
		super(context);
		this.EntityType = _entityType;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		if(! Core.getMetaObject(EntityType).isSubClassOf(AbstractMxHashMapEntry.entityName)) throw new Error(String.format("EntityType should be specialization of %s", AbstractMxHashMapEntry.entityName));
		IMendixObject newMap = Core.instantiate(this.getContext(), MxHashMap.entityName);
		MxHashMapHelper.initializeHashMap(newMap, this.EntityType);
		return newMap;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JAVA_Hashmap_Create";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
