// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package hashmaputil.actions;

import java.util.Set;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import hashmaputil.implementation.HashMapUtil;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * Add a content object into the Set that specified by the handle.
 * You can get handle by CreateHashSet action.
 * You can add different type entities into one set, but in that case you can't use ToListFromSet action.
 * It returns always 'true'.
 * 
 */
public class AddToSet extends UserAction<java.lang.Boolean>
{
	private final java.lang.String Handle;
	private final IMendixObject ContentObject;

	public AddToSet(
		IContext context,
		java.lang.String _handle,
		IMendixObject _contentObject
	)
	{
		super(context);
		this.Handle = _handle;
		this.ContentObject = _contentObject;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		Set<IMendixObject> mySet = HashMapUtil.getContentSet(Handle);
		if (mySet == null) {
			throw new RuntimeException("Set's handle(" + Handle + ") is invalid.");
		} else {
			boolean ret =  mySet.add(ContentObject);
			return ret;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "AddToSet";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
