// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package hashmaputil.actions;

import java.util.Map;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import hashmaputil.implementation.HashMapUtil;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * Put a key-value pair into the hashmap that specified by the handle.
 * You can get handle by CreateHashMap action.
 * You can put different type entities into one hashmap, but in that case you can't use ToValueListFromHashMap action.
 * It returns always 'true'.
 * 
 */
public class PutToHashMap extends UserAction<java.lang.Boolean>
{
	private final java.lang.String Handle;
	private final java.lang.String Key;
	private final IMendixObject ValueObject;

	public PutToHashMap(
		IContext context,
		java.lang.String _handle,
		java.lang.String _key,
		IMendixObject _valueObject
	)
	{
		super(context);
		this.Handle = _handle;
		this.Key = _key;
		this.ValueObject = _valueObject;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		Map<String, IMendixObject> myMap = HashMapUtil.getContentMap(Handle);
		if (myMap == null) {
			throw new RuntimeException("Hash Map Handle(" + Handle + ") is invalid.");
		} else {
			myMap.put(Key, ValueObject);
			return true;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "PutToHashMap";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
