// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package expertutils.actions;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * The GetObjectAttributeValueByIndex Java action retrieves the value of an attribute from a given Mendix object by its index in the entity definition and returns it as a string.
 * 
 * This Java action allows dynamic access to attribute values without needing to specify the attribute name, making it useful for generic processing of entities.
 */
public class GetObjectAttributeValueByIndex extends UserAction<java.lang.String>
{
	private final IMendixObject MxObject;
	private final java.lang.Long Index;

	public GetObjectAttributeValueByIndex(
		IContext context,
		IMendixObject _mxObject,
		java.lang.Long _index
	)
	{
		super(context);
		this.MxObject = _mxObject;
		this.Index = _index;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		IMetaObject metaObject = MxObject.getMetaObject();
		Collection<? extends IMetaPrimitive> declaredAttributes = metaObject.getDeclaredMetaPrimitives();

        // Convert to a list to allow indexing
        List<IMetaPrimitive> attributeList = new ArrayList<>(declaredAttributes);

        if (Index < 0 || Index >= attributeList.size()) {
            throw new IndexOutOfBoundsException("Invalid attribute index: " + Index);
        }

        String attributeName = attributeList.get(Index.intValue()).getName();
        return MxObject.getValue(getContext(), attributeName).toString();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetObjectAttributeValueByIndex";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
